// Generated by Dagger (https://dagger.dev).
package com.ece452.pillmaster.di;

import com.ece452.pillmaster.service.IReminderService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesReminderServiceFactory implements Factory<IReminderService> {
  private final AppModule module;

  private final Provider<Retrofit> retrofitProvider;

  public AppModule_ProvidesReminderServiceFactory(AppModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public IReminderService get() {
    return providesReminderService(module, retrofitProvider.get());
  }

  public static AppModule_ProvidesReminderServiceFactory create(AppModule module,
      Provider<Retrofit> retrofitProvider) {
    return new AppModule_ProvidesReminderServiceFactory(module, retrofitProvider);
  }

  public static IReminderService providesReminderService(AppModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.providesReminderService(retrofit));
  }
}
